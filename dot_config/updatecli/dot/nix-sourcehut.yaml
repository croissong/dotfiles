name: nix

sources:
  {{range $name, $config := .sourcehut}}

  {{ $name }}:
    kind: shell
    spec:
      shell: bash
      environments:
        - name: PATH
          value: '{{ requiredEnv "PATH" }}'
      command: |
        repo_owner={{ $config.repo.owner }}
        repo_name={{ $config.repo.name }}
        VERSION=$(
          curl -s -H Authorization:'token {{ requiredEnv "SH_TOKEN"  }}' \
            "https://git.sr.ht/api/$repo_owner/repos/$repo_name/refs" \
            | jq -r '.results[-1].name' \
            | sd 'refs/tags/(.*)' '$1'
        )
        url="https://git.sr.ht/$repo_owner/$repo_name/refs/download/${VERSION}/{{ $config.asset }}"
        sha=$(./dot/nix-fetch-sha.sh $url)
        echo "'{version: $VERSION, url: $url, sha: $sha}'"

  {{end}}

targets:
  {{range $name, $repo := .sourcehut}}

  {{ $name }}:
    kind: shell
    spec:
      shell: bash
      environments:
        - name: PATH
          value: '{{ requiredEnv "PATH" }}'
      changedif:
        kind: file/checksum
        spec:
          files:
            - {{ requiredEnv "DOT" }}/dot_config/nixpkgs/versions.json
      command: |
        update_versions_file() {
          versions_file={{ requiredEnv "DOT" }}/dot_config/nixpkgs/versions.json
          curr=$(dasel -f "$versions_file" {{ $name }})
          dasel put -f "$versions_file" -r json -t yaml {{ $name }} -v "$1"
          next=$(dasel -f "$versions_file" {{ $name }})
          difft --color always <(echo "$curr") <(echo "$next")
        }
        update_versions_file \

  {{end}}
