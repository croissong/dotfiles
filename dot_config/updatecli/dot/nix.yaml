name: nix

sources:
  {{ range $name, $config := . }}

  # set defaults
  {{ $config = mergeOverwrite (dict "kind" "github" "repo" $name "asset" false "trimPrefix" true) $config }}

  {{ if eq $config.kind "sourcehut" }}
  {{ $name }}:
    kind: shell
    spec:
      environments:
        - name: PATH
          value: '{{ requiredEnv "PATH" }}'
        - name: SH_TOKEN
          value: '{{ requiredEnv "SH_TOKEN" }}'
      command: ./dot/sourcehut.sh '{{ $config | toJson }}'

  {{ else if eq $config.kind "github" }}
  {{ $name }}-version:
    kind: githubrelease
    spec:
      repository: "{{ $config.repo }}"
      owner: "{{ $config.owner }}"
      token: {{ requiredEnv "GH_TOKEN"  }}
      versionFilter:
        kind: latest
    {{ if $config.trimPrefix }}
    transformers:
      - trimprefix: "v"
    {{ end }}
  {{ $name }}:
    kind: shell
    dependson:
      - {{ printf "%s-version" $name }}
    spec:
      command: ./dot/github.sh '{{ $config | toJson }}' '{{ source (printf "%s-version" $name) }}'
  {{end}}

  {{end}}

targets:
  {{range $name, $repo := .}}

  {{ $name }}:
    kind: shell
    sourceid: {{ $name }}
    spec:
      shell: bash
      environments:
        - name: PATH
          value: '{{ requiredEnv "PATH" }}'
      changedif:
        kind: file/checksum
        spec:
          files:
            - {{ requiredEnv "DOT" }}/dot_config/nixpkgs/versions.json
      command: |
        update_versions_file() {
          versions_file={{ requiredEnv "DOT" }}/dot_config/nixpkgs/versions.json
          curr=$(dasel -f "$versions_file" {{ $name }})
          dasel put -f "$versions_file" -t yaml {{ $name }} -v "$1"
          next=$(dasel -f "$versions_file" {{ $name }})
          riff <(echo "$curr") <(echo "$next")
        }
        update_versions_file \

  {{end}}
